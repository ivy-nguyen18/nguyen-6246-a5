@startuml
'https://plantuml.com/class-diagram

class Inventory{
    + main(String [])
    + start(Stage)
}

class FileFunctions{
    - itemObservableList: ObservableList<Item>
    + readFileFormatted(String, File)
    + openFile(): File
    + saveAs(): File
    + storeFileFormatted(String, File, ArrayList<Item>)
    + getItemObservableList(): ObservableList<Item>
    + setItemObservableList(ObservableList<Item>)
    + observableListToArrayList(ObservableList<Item>): ArrayList<Item>
}

class JsonFiles{
    + loadFromPrevious(File): List<Item>
    + saveFile(ArrayList<Item>, File)
}

class TsvFiles{
    + loadFromPrevious(File): List<Item>
    + saveFile(ArrayList<Item>, File)
    - parseStringList(List<String)): List<Item>
    - stringArrayAsItem(String []): Item
    - itemAsStringArray(Item): String[]
    - concatenateAllItemStrings(ArrayList<Item>): String
}

class HtmlFiles{
     + loadFromPrevious(File): List<Item>
     + saveFile(ArrayList<Item>, File)
     - trimToTableContent(String): List<Item>
     - parseStringAsList(String): List<Item>
     - stringArrayAsItem(String[]): Item
     - formatHTML(ArrayList<Item>): String
     - itemAsStringArray(Item): String[]
     - formatHTMLTable(ArrayList<Item>): String
}

class InventoryController{
    - itemTableView: TableView<Item>
    - valueColumn: TableColumn<Item, String>
    - serialNumberColumn: TableColumn<Item, String>
    - nameColumn: TableColumn<Item, String>
    - nameTextField: TextField
    - serialNumberTextField: TextField
    - valueTextField: TextField
    - searchByComboBox: ComboBox<String>
    - searchByTextField: TextField
    - nameErrorLabel: Label
    - valueErrorLabel: Label
    - serialNumberErrorLabel: Label
    - itemObservableList: ObservableList<Item>
    - primaryStage: Stage
    - selectedFile: File
    - inventoryFunctions: InventoryFunctions
    - serialNumSet: Set<String>


    + setPrimaryStage(Stage)
    + saveClicked(ActionEvent)
    + saveAsClicked(ActionEvent)
    + openClicked(ActionEvent)
    + addItemButtonClicked(ActionEvent)
    + comboBoxClicked(ActionEvent)
    + searchButtonClicked(ActionEvent)
    + deleteButtonClicked(ActionEvent)
    + initialize()
    + refreshButtonClicked(ActionEvent)
    - initializeLabels()
    - initializeTable()
    - editColumns()
    + editName(TableColumn.CellEditEvent)
    + editValue(TableColumn.CellEditEvent)
    + editSerialNumber(TableColumn.CellEditEvent)
    - initializeSearchFields()
    - initializeComboBox()
    - validateInputs(String, String, String): boolean
    - updateTableView()
    + showErrorPopUp(String)
}

class InventoryFunctions{
    - serialNumSet: Set<String>
    - allItems: ArrayList<Item>
    - filteredItems: ArrayList<Item>

    + setSerialNumSet(Set<String>)
    + setItemObservableList(ObservableList<Item>)
    + getAllItems(): ArrayList<Item>
    + setAllItems(ArrayList<Item>)
    + getAllItemsObservable(): ObservableList<Item>
    + getFilteredItems(): ObservableList<Item>

    + addItem(String, String, String)
    + loadPreviousSet(ObservableList<Item>)
    + deleteItem(Item)
    + editName(Item, String)
    + editValue(Item, String)
    + editSerialNumber(Item, String, String)
    + searchByName(String)
    + searchBySerialNumber(String)
    - formatCurrency(String): String
    + validateName(String): boolean
    + validateSerialNumberFormat(String): boolean
    + isDuplicate(String): boolean
    + validateValue(String): boolean
}

class Item{
    - value: String
    - serialNumber: String
    - name: String

    + Item(String, String, String)
    + getValue(): String
    + setValue(String value)
    + getSerialNumber(): String
    + setSerialNumber(String)
    + getName(): String
    + setName(String)
}



javafx.Application <|-- Inventory
Inventory -- InventoryController
InventoryController -- InventoryFunctions
InventoryController -- Item
InventoryFunctions -- Item
FileFunctions -- InventoryController
Item -- FileFunctions
Item -- JsonFiles
Item -- TsvFiles
Item -- HtmlFiles
FileFunctions <|-- JsonFiles
FileFunctions <|-- TsvFiles
FileFunctions <|-- HtmlFiles

@enduml